version: "3"

services:
  frontend:
    container_name: "frontend"
    build:
      context: frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3000:3000
    networks:
      - net
    depends_on:
      - backend
      
  backend:
    container_name: "backend"
    build:
      context: cms
      dockerfile: Dockerfile
    restart: always
    environment:
      - APP_KEYS=${APP_KEYS}
      - API_TOOKEN_SALT=${API_TOKEN_SALT}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - TRANSFER_TOKEN_SALT=${TRANSFER_TOKEN_SALT}
      - NODE_ENV=development
      - DATABASE_CLIENT=${DATABASE_CLIENT}
      - DATABASE_HOST=db
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - 1337:1337
    volumes:
      - ./app:/srv/app
    depends_on:
      - db
    command: 'strapi start'

  nginx:
    build:
      context: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - net

  db:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
     - net

networks:
  net:
    driver: bridge
